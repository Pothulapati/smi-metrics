version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12

    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Dependencies
          command: |
            make dep
      - run:
          name: Running unit tests
          command: |
            make lint test
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  release:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/deislabs/smi-metrics
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: go get -u github.com/mitchellh/gox
      - run: go get -u github.com/tcnksm/ghr
      - run: go get -u github.com/stevenmatthewt/semantics
      - run:
          name: Docker build and push
          command: |
            COMMIT_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
            echo 'export COMMIT_TAG="$(echo $CIRCLE_SHA1 | cut -c -7)"' >> $BASH_ENV
            docker login -u $DOCKER_USER -p $DOCKER_PASS $REGISTRY_HOST
            env IMAGE=$REGISTRY_HOST/smi-metrics TAG=$COMMIT_TAG make push
      - add_ssh_keys:
          fingerprints:
            - "<<InsertFingerprintHere>>"
      - run:
          name: Checking for a release structure on commit, and performing a github release if needed
          command: |
            set +e
            tag=$(semantics --output-tag)
            if [ $? -eq 0 ]; then
              docker tag $REGISTRY_HOST/smi-metrics:COMMIT_TAG $REGISTRY_HOST/smi-metrics:$tag
              docker push $REGISTRY_HOST/smi-metrics:$tag
              env GO111MODULE=on make vendor
              make binaries
              cd dist/ && gzip *
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag ./
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi

workflows:
  version: 2
  build-workflow:
    jobs:
      - build
      - release:
          context: release-context
          requires:
            - build
          filters:
            branches:
              only: master